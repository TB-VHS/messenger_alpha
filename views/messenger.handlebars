

<!-- Page wrapper start -->
<div class="page-wrapper with-sidebar">

  <!-- Sticky alerts (toasts), empty container -->
  <!-- Reference: https://www.gethalfmoon.com/docs/sticky-alerts-toasts -->
  <div class="sticky-alerts"></div>

  <!-- Sidebar start -->
  <div class="sidebar pt-5 pr-15 pl-15">
    <div class="sidebar-menu">
      {{> sidebar_button_menu }}
      <div class="d-flex flex-column pt-10 pr-15 pb-10 pl-15 bg-success rounded shadow">
        <div class="align-self-center">
          <a class="sidebar-brand">
            <img src="/img/Alpha_lowercase.svg" alt="alpha" />
          </a>
        </div>
        <div class="align-self-center font-size-12">
          messenger
        </div>
      </div>
    </div>  
    <div class="sidebar-divider"></div>
    <div class="sidebar-content rounded shadow-lg">
      <div>
        <ul id="users-online-list"></ul>
      </div>
    </div>
  </div>
  <!-- Sidebar end -->

  <!-- Content wrapper start -->
  <div class="content-wrapper">
    <div class="container-fluid pt-15 pr-15 pl-15">
      <table id="message-table" class="table table-striped">
        <tbody></tbody>
      </table>
    </div>
    <div class="input-group position-absolute bottom-0">
      <input type="text" id="message-input" class="form-control" placeholder="enter message">
      <div class="input-group-append">
        <button id="message-button" class="btn btn-primary" type="button">send</button>
      </div>
    </div>
  </div>
  <!-- Content wrapper end -->

</div>
<!-- Page wrapper end -->
<script>
  const socket = io( '{{ serverSocket }}');

  socket.on( 'connect'
  , function(){
    console.log( 'connected' )
  });
  socket.on( 'message'
  , function( msg ){ 
      console.log( 'message:', msg );
      switch( msg.target ){
        
        case 'sticky-alert':
          halfmoon.initStickyAlert({
            content:    msg.content
          , title:      msg.title
          , alertType:  msg.alertType
          , fillType:   msg.fillType
          });
          break;

        case 'message-table':
          $( '#message-table tbody' )
            .append( 
              '<tr class="message">'
            + '<td class="col-2 datetime">' + new Date( msg.datetime ).toLocaleString( 'de-DE' ) + '</td>'
            + '<td class="col-1 username font-weight-bold">' + msg.username + ': </td>'
            + '<td class="col-9 content">' + msg.content + '</td>'
            + '</tr>' );
          break;

        case 'users-online-list':
          $( '#users-online-list' ).empty();
          $( '#users-online-list' ).append( msg.usersOnlineList.map( function( user ){ return '<li>' + user.username + '</li>'; }));
          break;

        default:
          console.log( 'strange message' );

      }
  });

  $( '#message-button' ).click( function(){
    messageSend();
  })

  $( '#message-input' ).on( 'keydown', function ( event ){
    if( event.keyCode === 13 ){
      messageSend();
    }
  });

  function messageSend( destination='@all' ){
    var content = $( '#message-input' ).val();
    if( content !== '' ){
      var msg = { datetime:     Date.now()
                , content:      content 
                , destination:  destination
                };
      socket.emit( 'message', msg );
      $( '#message-input' ).val( '' );
    }
  }

</script>